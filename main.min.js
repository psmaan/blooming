!(function (e) {
  var t = {};
  function n(o) {
    if (t[o]) return t[o].exports;
    var r = (t[o] = { i: o, l: !1, exports: {} });
    return e[o].call(r.exports, r, r.exports, n), (r.l = !0), r.exports;
  }
  (n.m = e),
    (n.c = t),
    (n.d = function (e, t, o) {
      n.o(e, t) || Object.defineProperty(e, t, { enumerable: !0, get: o });
    }),
    (n.r = function (e) {
      "undefined" != typeof Symbol &&
        Symbol.toStringTag &&
        Object.defineProperty(e, Symbol.toStringTag, { value: "Module" }),
        Object.defineProperty(e, "__esModule", { value: !0 });
    }),
    (n.t = function (e, t) {
      if ((1 & t && (e = n(e)), 8 & t)) return e;
      if (4 & t && "object" == typeof e && e && e.__esModule) return e;
      var o = Object.create(null);
      if (
        (n.r(o),
        Object.defineProperty(o, "default", { enumerable: !0, value: e }),
        2 & t && "string" != typeof e)
      )
        for (var r in e)
          n.d(
            o,
            r,
            function (t) {
              return e[t];
            }.bind(null, r)
          );
      return o;
    }),
    (n.n = function (e) {
      var t =
        e && e.__esModule
          ? function () {
              return e.default;
            }
          : function () {
              return e;
            };
      return n.d(t, "a", t), t;
    }),
    (n.o = function (e, t) {
      return Object.prototype.hasOwnProperty.call(e, t);
    }),
    (n.p = ""),
    n((n.s = 0));
})([
  function (e, t, n) {
    n(1), (e.exports = n(2));
  },
  function (e, t, n) {
    "use strict";
    let o, r, i, l, a;
    const s = {
        time: { type: "f", value: 1 },
        pointscale: { type: "f", value: 1 },
        decay: { type: "f", value: 2 },
        complex: { type: "f", value: 2 },
        waves: { type: "f", value: 3 },
        eqcolor: { type: "f", value: 3 },
        fragment: { type: "i", value: !1 },
        dnoise: { type: "f", value: 0 },
        qnoise: { type: "f", value: 4 },
        r_color: { type: "f", value: 0 },
        g_color: { type: "f", value: 0 },
        b_color: { type: "f", value: 0 },
      },
      c = {
        perlin: {
          vel: 0.002,
          speed: 2e-4,
          perlins: 1,
          decay: 0.4,
          complex: 0,
          waves: 10,
          eqcolor: 7,
          fragment: !1,
          redhell: !0,
        },
        rgb: { r_color: 6, g_color: 0, b_color: 0.2 },
        cam: { zoom: 6 },
      },
      d = Date.now(),
      u = () => {
        const e = window.innerWidth,
          t = window.innerHeight > e ? e + 50 : window.innerHeight;
        r.setSize(e, t), (o.aspect = e / t), o.updateProjectionMatrix();
      },
      m = function () {
        this.mesh = new THREE.Object3D();
        const e = new THREE.IcosahedronGeometry(1, 6);
        l = new THREE.ShaderMaterial({
          wireframe: !1,
          uniforms: s,
          vertexShader: document.getElementById("vertexShader").textContent,
          fragmentShader: document.getElementById("fragmentShader").textContent,
        });
        const t = new THREE.Mesh(e, l);
        this.mesh.add(t);
      },
      f = () => {
        requestAnimationFrame(f),
          TweenMax.to(o.position, 1, { z: c.cam.zoom + 5 }),
          (a.mesh.rotation.y += 0.001),
          (l.uniforms.time.value = c.perlin.speed * (Date.now() - d)),
          (l.uniforms.pointscale.value = c.perlin.perlins),
          (l.uniforms.decay.value = c.perlin.decay),
          (l.uniforms.complex.value = c.perlin.complex),
          (l.uniforms.waves.value = c.perlin.waves),
          (l.uniforms.eqcolor.value = c.perlin.eqcolor),
          (l.uniforms.r_color.value = c.rgb.r_color),
          (l.uniforms.g_color.value = c.rgb.g_color),
          (l.uniforms.b_color.value = c.rgb.b_color),
          (l.uniforms.fragment.value = c.perlin.fragment),
          r.render(i, o);
      },
      p = (e) => {
        const t = document.documentElement;
        c.rgb = {
          r_color: 6,
          g_color: Math.abs((4 * e.clientX) / t.offsetWidth - 3.8),
          b_color: Math.abs((4 * e.clientY) / t.offsetHeight - 0.2),
        };
      },
      g = () => {
        const e = document.getElementById("mainText"),
          t = (6 * e.scrollTop) / (e.scrollHeight - e.clientHeight);
        c.rgb = { r_color: Math.abs(t - 6), g_color: t, b_color: 0.2 };
      },
      v = () => {
        const e = window.innerWidth,
          t = document.documentElement,
          n = document.getElementById("mainText");
        e >= 1025 &&
          (t.addEventListener("mousemove", p, !1),
          n.removeEventListener("scroll", g, !1)),
          e < 1025 &&
            (t.removeEventListener("mousemove", p, !1),
            n.addEventListener("scroll", g, !1));
      },
      y = () => {
        const e = window.innerWidth;
        let t, n;
        return (
          e >= 1025 && ((t = [0, 1, 11, 3, 5, 6, 7, 8, 9, 10, 12]), (n = [])),
          e < 1025 &&
            ((t = [0, 1, 2, 12]), (n = [3, 4, 5, 6, 7, 8, 9, 10, 11])),
          { numLoad: t, numMenu: n }
        );
      },
      w = (e, t) => {
        const n = [];
        if (0 !== e.length)
          for (let o = 0; o < e.length; o++)
            n[o] = o !== e.length - 1 ? t * (o + 1) : t * (o + 2);
        return n;
      },
      h = (e, t, n) => {
        for (let o = 0; o < t.length; o++)
          setTimeout(() => {
            13 !== t[o] &&
              (e[t[o]].style.opacity = Math.abs(e[t[o]].style.opacity - 1)),
              1 === t[o] && e[1].classList.add("down");
          }, n[o]);
      };
    const ftg = () => {
      console.log("executed");
      const e = document.getElementsByClassName("delay"),
        { numLoad: t } = y(),
        n = w(t, 300);
      h(e, t, n),
        (() => {
          const e = window.innerWidth,
            t = window.innerHeight > e ? e + 50 : window.innerHeight;
          (i = new THREE.Scene()),
            (i.fog = new THREE.Fog(0, 5, 15)),
            (i.background = new THREE.Color(0)),
            (o = new THREE.PerspectiveCamera(35, e / t, 1, 1e3)),
            o.position.set(0, 0, 10),
            (r = new THREE.WebGLRenderer({ antialias: !0, alpha: !0 })),
            r.setSize(e, t),
            (r.shadowMap.enabled = !0),
            r.domElement.classList.add("canvas"),
            console.log("from main min");
          const div = document.getElementById("CanvasRef");
          div.appendChild(r.domElement),
            setTimeout(
              () => {
                r.domElement.style.opacity = ".7";
              },
              e < 1025 ? 1200 : 3300
            ),
            window.addEventListener("resize", u, !1);
        })(),
        (() => {
          const e = new THREE.HemisphereLight(16777215, 0, 1.4);
          new THREE.PointLight(16777215, 0.5).position.set(20, 20, 20),
            i.add(e);
        })(),
        (a = new m()),
        a.mesh.scale.set(1, 1, 1),
        i.add(a.mesh),
        f(),
        v();
    };
    setTimeout(() => {
      ftg();
    }, 300);

    window.addEventListener("resize", v, !1);
  },
]);
